
@using DataAccessLibrary
@using DataAccessLibrary.Models

@inject ITeamData _teamsDataAccess;
@inject IPlayerData _playersDataAccess;

@if(teams is null){
<p><em>Loading...</em></p>
}else{
<table class="table myaccordion table-hover" id="accordion">
  <thead>
    <tr >
      <th style="border-bottom: solid 9px #007a4d">Organisation</th>
      <th style="border-bottom: solid 9px #ce1227">Team</th>
      <th style="border-bottom: solid 9px #ffb715">Country</th>
      <th style="border-bottom: solid 9px #002395">Team Captain</th>
      <th style="border-bottom: solid 9px #ef830f">Captain Discord</th>
      <th style="border-bottom: solid 9px #7baddc">Team Manager</th>
      <th style="border-bottom: solid 9px #007a4d">Manager Discord</th>
      <th style="border-bottom: solid 9px #ce1227">OPGG</th>
      @*<th>Players</th>*@
      <th style="border-bottom: solid 9px #ffb715">Active</th>
    </tr>
  </thead>
  <tbody>
        @foreach (var team in teams)
        {
       
        <tr data-toggle="collapse" data-target="#collapse-@rowCount" aria-expanded="false" aria-controls="collapse-@rowCount" class="collapsed">
          <td>@team.Organisation</td>
          <td>@team.TeamName</td>
          <td>@team.RepresentingCountry</td>
          <td>@team.GamerTag</td>
          <td>@team.Discord</td>
          <td>@team.TeamManager</td>
          <td>@team.ManagerDiscord</td>
          <td><a href="@team.OPGGLink" target="_blank">OP.GG HERE</a></td>
          @{
            if(team.Active == true){
              <td style="text-align: center;"><img class="activeStatus" src="images/active-icon.png"/></td>
           }else{
              <td style="text-align: center;"><img class="activeStatus" src="images/notactive-icon.png" /></td>
           }
          }
        </tr>
        
		<tr>
		  <td colspan="10" id="collapse-@rowCount" class="collapse acc" data-parent="#accordion">
		    @{foreach(var player in players){
             if(player.TeamId == team.TeamID){
               if(player.TeamRole != "Substitute"){
                 var fullname = player.FirstName + " " + player.LastName;
                 <PlayerCards 
                      GamerTag=@player.GamerTag 
                      Name=@fullname 
                      twitterURL="https://twitter.com/home"
                      OPGGURL=@player.OPGGLink
                      DiscordHash=@player.Discord
                      GameRole=@player.GameRole
                      CaptainRoleCss="@((player.TeamRole == "Captain") ? "captain-ring" : null)"
                 />                 
              }
             }
            }
           }
		  </td>
		</tr>
		
          rowCount++;
        }
  </tbody>
</table>
}


@code {

    private List<TeamModel> teams;
    private List<PlayerModel> players;
    public List<PlayerModel[]> playerTeamModelList;

    int rowCount = 0;

    protected override async Task OnInitializedAsync()
    {
        teams = await _teamsDataAccess.GetTeams();
        players = await _playersDataAccess.GetPlayers();

        playerTeamModelList = teams.Select(team => players.Where(player => player.TeamId == team.TeamID).ToArray()).ToList();
    }

    


}
